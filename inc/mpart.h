#ifndef MPART_H
#define MPART_H


#include <stdint.h>
#include <stddef.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef void * mpart_id;


/***************************************************************************************
 * 函数名：
 * 			mpart_create
 * 函数功能：
 * 			该接口用于在指定的内存块上创建一个内存分区。
 * 参数说明：
 *			addr：
 *				内存地址；
 *			size：
 *				内存长度；
 *			mid：
 *				存放内存分区标识的指针。
 * 调用核：
 * 			所有核均可自行调用
 * 返回值：
 *			return == 0		：成功
 *			return == -1	：失败
 * 备注：
 * 			错误码：
 * 				EINVAL		mid是无效指针，或者addr指定的内存无效，或者size取值无效；
 *				EAGAIN		系统资源不足，或已超过系统限制的内存分区总数；
 *				EMNOTINITED	内存分区模块尚未初始化。
 ***************************************************************************************/
extern int32_t mpart_create(char *addr, size_t size, mpart_id *mid);

/***************************************************************************************
 * 函数名：
 * 			mpart_alloc
 * 函数功能：
 * 			该接口在指定内存分区中分配大小为size的内存。
 * 参数说明：
 *			mid：
 *				内存分区标识；
 *			size：
 *				需要分配的内存长度。
 * 调用核：
 * 			所有核均可自行调用
 * 返回值：
 *			return != 0		：成功分配内存；
 *			return == 0		：分配失败
 * 备注：
 * 			错误码：
 * 				EINVAL		mid指定的内存分区不存在，或者size取值为0；
 *				ENOMEM		没有足够的内存可供分配；
 *				EMNOTINITED	内存分区模块尚未初始化。
 ***************************************************************************************/
extern void *mpart_alloc(mpart_id mid, size_t size);

/***************************************************************************************
 * 函数名：
 * 			mpart_calloc
 * 函数功能：
 * 			该接口在指定内存分区中分配大小为size的内存，并将分配的内存空间清零。
 * 参数说明：
 *			mid：
 *				内存分区标识；
 *			size：
 *				需要分配的内存长度。
 * 调用核：
 * 			所有核均可自行调用
 * 返回值：
 *			return != 0		：成功分配内存；
 *			return == 0		：分配失败
 * 备注：
 * 			错误码：
 * 				EINVAL		mid指定的内存分区不存在，或者size取值为0；
 *				ENOMEM		没有足够的内存可供分配；
 *				EMNOTINITED	内存分区模块尚未初始化。
 ***************************************************************************************/
extern void *mpart_calloc(mpart_id mid, size_t size);

/***************************************************************************************
 * 函数名：
 * 			mpart_free
 * 函数功能：
 * 			该接口将所分配的内存块释放至内存分区的空闲内存列表中。
 * 参数说明：
 *			mid：
 *				内存分区标识；
 *			addr：
 *				需要释放的内存地址，若addr为空指针，则该接口直接返回。
 * 调用核：
 * 			所有核均可自行调用
 * 返回值：
 *			return == 0		：成功分配内存；
 *			return == -1	：分配失败
 * 备注：
 * 			错误码：
 * 				EINVAL		mid指定的内存分区不存在，或者addr指定的内存无效；
 *				EMNOTINITED	内存分区模块尚未初始化。
 ***************************************************************************************/
extern int32_t mpart_free(mpart_id mid, char *addr);


#ifdef __cplusplus
}
#endif


#endif /* MPART_H */
