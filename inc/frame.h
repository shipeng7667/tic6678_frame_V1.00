#ifndef FRAME_H
#define FRAME_H


#include <stdint.h>
#include <stddef.h>


#ifdef __cplusplus
extern "C" {
#endif


/***************************************************************************************
 * 函数名：
 * 			frame_init
 * 函数功能：
 * 			框架装载
 * 参数说明：
 *			addr：
 *				框架堆起始地址；
 *			size：
 *				框架堆长度，单位为字节；
 * 调用核：
 * 			所有核均可自行调用
 * 返回值：
 *			return == 0		：成功
 *			return < 0		：失败
 * 备注：
 * 			框架本身、框架对象均会占用一定的堆空间，如果不知道合适大小，可以设置成1MB；
 * 			各核的框架堆空间不能重叠。
 ***************************************************************************************/
extern int32_t frame_init(void *addr, size_t size);

/***************************************************************************************
 * 函数名：
 * 			frame_uninit
 * 函数功能：
 * 			框架卸载
 * 参数说明：
 *			无
 * 调用核：
 * 			所有核均可自行调用
 * 返回值：
 *			return == 0		：成功
 *			return < 0		：失败
 * 备注：
 * 			无
 ***************************************************************************************/
extern int32_t frame_uninit(void);

/***************************************************************************************
 * 函数名：
 * 			frame_heap_useMax_get
 * 函数功能：
 * 			获取框架堆历史最大使用内存，单位为字节
 * 参数说明：
 *			无
 * 调用核：
 * 			所有核均可自行调用
 * 返回值：
 *			return == (size_t)-1	：失败
 *			其他						：成功
 * 备注：
 * 			用户可基于此接口来评估框架堆的适合大小
 ***************************************************************************************/
extern size_t frame_heap_useMax_get(void);


#ifdef __cplusplus
}
#endif


#endif /* FRAME_H */
